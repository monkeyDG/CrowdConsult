#pragma checksum "C:\Users\Administrator\Documents\GitHub\CrowdConsult\Pages\Login.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4a2a9f5d9cb36bc5d33a7419c576e24dcb5e25eb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Adm4379Example.Pages.Pages_Login), @"mvc.1.0.razor-page", @"/Pages/Login.cshtml")]
namespace Adm4379Example.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Administrator\Documents\GitHub\CrowdConsult\Pages\_ViewImports.cshtml"
using Adm4379Example;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4a2a9f5d9cb36bc5d33a7419c576e24dcb5e25eb", @"/Pages/Login.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"37359e5550fee6f64851791a86985b63d4c00677", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Login : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-page-handler", "button", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onsubmit", new global::Microsoft.AspNetCore.Html.HtmlString("return validateSignUp()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onsubmit", new global::Microsoft.AspNetCore.Html.HtmlString("return validateLogIn()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\Administrator\Documents\GitHub\CrowdConsult\Pages\Login.cshtml"
  
    ViewData["Title"] = "Log In or Sign Up";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<html>\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a2a9f5d9cb36bc5d33a7419c576e24dcb5e25eb4848", async() => {
                WriteLiteral(@"
        <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
        <script src=""js/site.js""></script>
        <title>Login</title>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script async src=""https://www.googletagmanager.com/gtag/js?id=UA-192721075-1""></script>
        <script>
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());
            gtag('config', 'UA-192721075-1');
        </script>
        <!-- Google Tag Manager -->
        <script>
            (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
            new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
            j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
            'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
            })(window,document,'script','dataLayer','GTM-KLDZ6Z2');
        </scr");
                WriteLiteral("ipt>\r\n        <!-- End Google Tag Manager -->\r\n    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a2a9f5d9cb36bc5d33a7419c576e24dcb5e25eb6937", async() => {
                WriteLiteral(@"
        <!-- Google Tag Manager (noscript) -->
        <noscript>
            <iframe src=""https://www.googletagmanager.com/ns.html?id=GTM-KLDZ6Z2"" height=""0"" width=""0"" style=""display:none;visibility:hidden""></iframe>
        </noscript>
        <!-- End Google Tag Manager (noscript) -->
        <div class=""wrapper"">
");
#nullable restore
#line 37 "C:\Users\Administrator\Documents\GitHub\CrowdConsult\Pages\Login.cshtml"
             if (HttpContext.Request.Query["success"] == "false") {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <h6 class=\"center\">Unable to log in. Please create an account or try again.</h6>\r\n");
#nullable restore
#line 39 "C:\Users\Administrator\Documents\GitHub\CrowdConsult\Pages\Login.cshtml"
            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 40 "C:\Users\Administrator\Documents\GitHub\CrowdConsult\Pages\Login.cshtml"
             if (HttpContext.Request.Query["success"] == "alreadyexists") {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <h6 class=\"center\">A user with that email address is already registerted.</h6>\r\n");
#nullable restore
#line 42 "C:\Users\Administrator\Documents\GitHub\CrowdConsult\Pages\Login.cshtml"
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("            <div id=\"signUpDiv\">\r\n                <h1><span>Create a New Account</span></h1>\r\n                <div class=\"container\">\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a2a9f5d9cb36bc5d33a7419c576e24dcb5e25eb8789", async() => {
                    WriteLiteral(@"
                        <!-- above line validates the form when submitted. SignUp is not yet built to accept form inputs -- this will be connected to mongodb for Create operations.
                        We can use javascript local storage to store the values we want to add to mongodb if we want to do additional client-side validation first, since description text will be too long to pass by URL string query -->
                        <div class=""row"">
                            <div class=""col25percent"">
                                <label for=""nameSignUp"">Full Name</label>
                            </div>
                            <div class=""col75percent"">
                                <input type=""text"" id=""nameSignUp"" name=""nameSignUp"" placeholder=""John Smith"">
                            </div>
                        </div>
                        <div class=""row"">
                            <div class=""col25percent"">
                                <label for=""nameSignUp"">Co");
                    WriteLiteral(@"mpany</label>
                            </div>
                            <div class=""col75percent"">
                                <input type=""text"" id=""companySignUp"" name=""companySignUp"" placeholder=""ABC Corp"">
                            </div>
                        </div>
                        <div class=""row"">
                            <div class=""col25percent"">
                                <label for=""emailSignUp"">Email Address</label>
                            </div>
                            <div class=""col75percent"">
                                <input type=""text"" id=""emailSignUp"" name=""emailSignUp"" placeholder=""example@email.com"">
                            </div>
                        </div>
                        <div class=""row"">
                            <div class=""col25percent"">
                                <label for=""phoneSignUp"">Phone Number</label>
                            </div>
                            <div class=""col75percent"">
   ");
                    WriteLiteral(@"                             <input type=""text"" id=""phoneSignUp"" name=""phoneSignUp"" placeholder=""+X (XXX) XXX-XXXX"">
                            </div>
                        </div>
                        <div class=""row"">
                            <div class=""col25percent"">
                                <label for=""locationSignUp"">Location</label>
                            </div>
                            <div class=""col75percent"">
                                <input type=""text"" id=""locationSignUp"" name=""locationSignUp"" placeholder=""City, Country"">
                            </div>
                        </div>
                        <div class=""row"">
                            <div class=""col25percent"">
                                <label for=""passwordSignUp"">Create a Password</label>
                            </div>
                            <div class=""col75percent"">
                                <input type=""password"" id=""passwordSignUp"" name=""passwordSignUp"" pla");
                    WriteLiteral(@"ceholder=""Choose a strong password"">
                            </div>
                        </div>
                        <div class=""row"">
                            <div class=""col25percent"">
                                <label for=""pictureSignUp"">Profile Picture (image source link)</label>
                            </div>
                            <div class=""col75percent"">
                                <input type=""text"" id=""pictureSignUp"" placeholder=""(Optional)"" name=""pictureSignUp"">
                            </div>
                        </div>
                        <div class=""row"" style=""text-align: center; justify-content: center"">
                            <button class=""btn2"" style=""background-color: #ffd900; padding-top: 10px"">Sign Up</button>
                        </div>
                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.PageHandler = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                </div>
                
                <div style=""text-align: center"">
                    <button class=""btn2"" onclick=""toLogIn()"">I already have an account</button>
                </div>
            </div>
            <div id=""logInDiv"" style=""display: none"">
                <h1><span>Log In to Your Account</span></h1>
                <div class=""container"">
                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a2a9f5d9cb36bc5d33a7419c576e24dcb5e25eb15177", async() => {
                    WriteLiteral(@" 
                        <!-- above line validates the form when submitted. SignUp is not yet built to accept form inputs -- this will be connected to mongodb for Create operations.
                        We can use javascript local storage to store the values we want to add to mongodb if we want to do additional client-side validation first, since description text will be too long to pass by URL string query -->
                        <div class=""row"">
                            <div class=""col25percent"">
                                <label for=""emailLogIn"">Email Address</label>
                            </div>
                            <div class=""col75percent"">
                                <input type=""text"" id=""emailLogIn"" name=""emailLogIn"" placeholder=""example@email.com"">
                            </div>
                        </div>
                        <div class=""row"">
                            <div class=""col25percent"">
                                <label for=""pa");
                    WriteLiteral(@"sswordLogIn"">Password</label>
                            </div>
                            <div class=""col75percent"">
                                <input type=""password"" id=""passwordLogIn"" name=""passwordLogIn"">
                            </div>
                        </div>
                        <div class=""row"" style=""text-align: center; justify-content: center"">
                            <button class=""btn2"" style=""background-color: #ffd900; padding-top: 10px"">Log In</button>
                        </div>
                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.PageHandler = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                </div>\r\n                <div style=\"text-align: center\">\r\n                    <button class=\"btn2\" onclick=\"toSignUp()\">I don\'t have an account</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<LogInModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<LogInModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<LogInModel>)PageContext?.ViewData;
        public LogInModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
